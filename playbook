#!/bin/bash
BASE_PATH="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
source $BASE_PATH/bootstrap.sh

export ENV_PATH
ANSIBLE_PATH="$ENV_PATH/ansible"

function setup_workspace() {
    rm -Rf "$ANSIBLE_PATH"
    mkdir -p "$ANSIBLE_PATH"
    export ANSIBLE_CONFIG="$ANSIBLE_PATH/ansible.cfg"
    export ANSIBLE_HOST_KEY_CHECKING=False
    if [ ! -f "$ANSIBLE_CONFIG" ]; then
        cat << EOF > $ANSIBLE_CONFIG
[defaults]
roles_path=$ANSIBLE_PATH/roles
library=$ANSIBLE_PATH
retry_files_enabled = False
host_key_checking = False
[ssh_connection]
scp_if_ssh=True
EOF
    fi
    for file in $BASE_PATH/ansible/*; do
        [[ "$(basename $file)" == "group_vars" ]] && continue
        [[ "$(basename $file)" == "roles" ]] && continue
        ln -s $file $ANSIBLE_PATH/$(basename $file)
    done
    mkdir $ANSIBLE_PATH/roles
    for file in $BASE_PATH/ansible/roles/*; do
        ln -s $file $ANSIBLE_PATH/roles/$(basename $file)
    done
}

function setup_inventory() {
    EC2_PY="$ANSIBLE_PATH/ec2_inventory.py"
    export EC2_INI_PATH="$BASE_PATH/ansible/ec2_dynamic_inventory.ini"
    INVENTORY_ARG="$(echo "$1" | cut -d ',' -f 1)"
    if [ "$INVENTORY_ARG" == "ec2" ]; then
        export ANSIBLE_INVENTORY=$EC2_PY
        if [ "$(echo "$1" | grep -e ',[a-zA-Z0-9]')" ]; then
            export ANSIBLE_EC2_PROJECT_NAME="$(echo "$1" | cut -d ',' -f 2-)"
        else
            export ANSIBLE_EC2_PROJECT_NAME="testone"
        fi
    else
        export ANSIBLE_INVENTORY="$ANSIBLE_PATH/hosts"
        cat << EOF > $ANSIBLE_INVENTORY
[all]
$1
EOF
    fi
}

function playbook_lookup() {
    PLAYBOOK_BASE="$(echo "$1" | cut -d ',' -f 1)"
    PLAYBOOK="$PLAYBOOK_BASE"
    [[ -f "$PLAYBOOK" ]] && return 0
    PLAYBOOK="$ANSIBLE_PATH/playbooks/$PLAYBOOK_BASE"
    [[ -f "$PLAYBOOK" ]] && return 0
    PLAYBOOK="$ANSIBLE_PATH/playbooks/$PLAYBOOK_BASE.yml"
    [[ -f "$PLAYBOOK" ]] && return 0
    PLAYBOOK="$ANSIBLE_PATH/playbooks/$PLAYBOOK_BASE.yaml"
    [[ -f "$PLAYBOOK" ]] && return 0
    echo "Role or playbook not found [$PLAYBOOK_BASE]"
    exit 1
}

function add_roles() {
    ROLES="$(echo "$1" | cut -s -d ',' -f 2-)"
    if [ "$ROLES" ]; then
        cp "$PLAYBOOK" "$ANSIBLE_PATH/primary.yml"
        PLAYBOOK="$ANSIBLE_PATH/primary.yml"
        OIFS=$IFS
        IFS=","
        for role in $ROLES; do
            if [ -d "$role" ]; then
                ln -s "$role" "$ANSIBLE_PATH/roles/${role##*/}"
                echo "Including role [${role##*/}]"
                echo "    - role: '${role##*/}'" >> $PLAYBOOK
            elif [ -d "$ANSIBLE_PATH/roles/$role" ]; then
                echo "Including role [$role]"
                echo "    - role: '$role'" >> $PLAYBOOK
            else
                echo "Role [$role] not found. Ignoring."
            fi
        done
        IFS=$OIFS
    fi
}

function setup_vars() {
    mkdir -p "$ANSIBLE_PATH/group_vars"
    cp "$BASE_PATH/ansible/group_vars/all.yml" "$ANSIBLE_PATH/group_vars/all.yml"
    VARS_FILE="$(echo "$1" | cut -d ',' -f 1)"
    if [ ${VARS_FILE/group_vars} != $VARS_FILE -o -r "$BASE_PATH/ansible/group_vars/$VARS_FILE.yml" ]; then
        OIFS=$IFS
        IFS=","
        for varfile in $1; do
            if [ -r "$varfile" ]; then
                if [ "$(basename $varfile)" == "all.yml" ]; then
                    echo "Resetting all.yml with [$varfile]"
                    cat "$varfile" > $ANSIBLE_PATH/group_vars/all.yml
                else
                    echo "Including var file [$varfile]"
                    cat "$varfile" >> "$ANSIBLE_PATH/group_vars/all.yml"
                fi
            elif [ -r "$BASE_PATH/ansible/group_vars/$varfile.yml" ]; then
                echo "Including var file [$varfile]"
                cat "$BASE_PATH/ansible/group_vars/$varfile.yml" >> "$ANSIBLE_PATH/group_vars/all.yml"
            fi
        done
        ( 
            cd $BASE_PATH/ansible/group_vars
            cat $ANSIBLE_PATH/group_vars/all.yml | awk '$1=="include" && NF>=2 { system("cat "$2".yml"); next } {print}' > $ANSIBLE_PATH/group_vars/all_alt.yml 
            rm -f $ANSIBLE_PATH/group_vars/all.yml
            mv $ANSIBLE_PATH/group_vars/all_alt.yml $ANSIBLE_PATH/group_vars/all.yml
        )
        IFS=$OIFS
        return 0
    fi
    return 1
}

load_configuration
setup_workspace
setup_inventory "$1"
shift
playbook_lookup "$1"
add_roles "$1"
shift
setup_vars "$1" && shift
$ENV_PATH/bin/ansible --version
exec $ENV_PATH/bin/ansible-playbook $PLAYBOOK $@
